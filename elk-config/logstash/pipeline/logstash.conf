input {
  kafka {
    bootstrap_servers => "host.docker.internal:9092" # For Docker Desktop (Mac/Windows).
                                                     # For Linux, try your host IP on docker0 bridge (e.g., 172.17.0.1:9092)
                                                     # Or if Kafka is another container on elk_network: "kafka_container_name:9092"
    topics => ["service-logs"]
    group_id => "logstash_service_logs_consumer"
    codec => "json" # Logs are already JSON formatted by LogstashEncoder in Spring Boot
    # auto_offset_reset => "latest" # Uncomment if you only want to process new messages
  }
}

filter {
  # Logs are already structured JSON from LogstashEncoder.
  # We can add further processing if needed.
  # Example: Convert log level to lowercase
  # if [level] {
  #   mutate {
  #     lowercase => ["level"]
  #   }
  # }

  # Example: Parse a nested JSON string if one of your fields contains stringified JSON
  # if [some_json_field] {
  #   json {
  #     source => "some_json_field"
  #     target => "parsed_some_json_field"
  #   }
  # }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "service-logs-%{+YYYY.MM.dd}"
    # user => "elastic" # Uncomment and set if you enable X-Pack security with authentication
    # password => "your_password" # Uncomment and set if you enable X-Pack security with authentication
  }

  # Optional: For debugging, print logs to Logstash's stdout
  # stdout {
  #   codec => rubydebug
  # }
}
